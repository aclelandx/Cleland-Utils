@mixin flex-parent(
	$justify: center,
	$align: center,
	$direction: column,
	$wrap: nowrap,
	$gap: 0
) {
	display: flex;
	flex-flow: $direction $wrap;
	justify-content: $justify;
	align-items: $align;
	gap: $gap;
}

@mixin PrimaryFont($size: 1rem, $weight: 400, $style: normal) {
	font-size: $size;
	font-family: var(--primary-font-family);
	font-weight: $weight;
	font-style: $style;
	color: var(--primary-foreground-accent);
}

@keyframes rotate360Keyframes {
	0% {
		rotate: 0deg;
	}
	100% {
		rotate: 360deg;
	}
}

/* Animation Shorthand
	animation-duration: How long it should play
	animation-timing-function: linear, ease-in-out etc...
	animation-delay: delay on the animation
	animation-iteration-count: infinite - how many times to play animation
	animation-direction: normal, reverse, alternate, alternate reverse
	animation-fill-mode: none forwards backwards both
	animation-play-state: paused | running
	animation-name: Name of the keyframes
*/

@mixin Base-Animation(
	$speed: 2s,
	$timing: linear,
	$delay: 0,
	$count: infinite,
	$direction: normal,
	$fill: forwards,
	$playState: running,
	$name: defaultAnimation
) {
	animation-name: $name;
	animation-duration: $speed;
	animation-timing-function: $timing;
	animation-delay: $delay;
	animation-iteration-count: $count;
	animation-direction: $direction;
	animation-fill-mode: $fill;
	animation-play-state: $playState;
}

@mixin Rotate360($speed, $ease, $count) {
	@include Base-Animation(
		$speed: $speed,
		$name: rotate360Keyframes,
		$timing: $ease,
		$count: $count
	);
}

// works best with items that are centered by itself in a flex parent
@mixin ShrinkToNothing($speed, $timing, $direction, $width, $height) {
	@keyframes ShrinkToZero {
		0% {
			height: $height;
			width: $width;
		}
		100% {
			height: 0;
			width: 0;
		}
	}

	@include Base-Animation(
		$speed: $speed,
		$timing: $timing,
		$direction: $direction,
		$fill: forwards,
		$name: ShrinkToZero,
		$playState: running,
		$count: 1
	);
}

@mixin ButtonTheme1() {
	@include PrimaryFont($weight: 600);
	width: fit-content;
	height: fit-content;
	padding: 0.5rem 1rem;
	border: 1px solid var(--primary-foreground-accent);
	background-color: var(--primary-foreground);
	border-radius: 0.25rem;
	text-transform: uppercase;
	letter-spacing: 0.075rem;
	box-shadow: 0 0.25rem var(--primary-foreground-accent);

	transition: background-color 250ms, border 250ms, color 250ms,
		box-shadow 250ms ease-in-out;

	&:hover {
		cursor: pointer;
		transition: background-color 250ms, border 250ms, color 250ms,
			box-shadow 250ms ease-in-out;
		background-color: var(--primary-foreground-accent);
		border: 1px solid var(--primary-foreground);
		color: var(--primary-background);
		box-shadow: 0 0.25rem var(--primary-foreground);
	}

	&:active {
		padding: 0.625rem 1rem 0.375rem 1rem;
		box-shadow: inset 0 0.125rem 0.75rem 0 black;
	}
}
